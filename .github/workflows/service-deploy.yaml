name: Netflix Movie Catalog Service Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: 35.175.236.192
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # TODO define this secret in your GitHub repo settings

jobs:
  Deploy:
    name: Deploy in EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the app code
        uses: actions/checkout@v2
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      - name : build
        run: |
          docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
          img_name=netflix
          # same docker_image to pass it to the next workflow 
          echo "image=$img_name" >> $GITHUB_OUTPUT
          docker build --push -t ${{ secrets.DOCKERHUB_USERNAME }}/$img_name  .

      - name: SSH to EC2 instance
        run: |
          echo "$SSH_PRIVATE_KEY" > mykey.pem
          chmod 600 mykey.pem
          
          # Copy the files from the current work dir into the EC2 instance, under `~/app`.
          scp -o StrictHostKeyChecking=no -i mykey.pem -r * ubuntu@$EC2_PUBLIC_IP:~/app
          
          # Connect to your EC2 instance and execute the `deploy.sh` script (this script is part of the repo files). 
          # TODO You need to implement the `deploy.sh` script yourself.
          #
          # Upon completion, the NetflixMovieCatalog app should be running with its newer version. 
          # To keep the app running in the background independently on the terminal session you are logging to, configure it as a Linux service.
    
          ssh -i mykey.pem ubuntu@$EC2_PUBLIC_IP 'cd ~/app && chmod +x deploy.sh && ./deploy.sh'

          
          
          
